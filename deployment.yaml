apiVersion: apps/v1
kind: Deployment
metadata:
  name: ray-new-site-deployment
  labels:
    app: ray-new-site
spec:
  replicas: 1 # Or your desired number of replicas
  selector:
    matchLabels:
      app: ray-new-site
  strategy: # Add a strategy for rolling updates
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0 # Max number of pods that can be unavailable during the update
      maxSurge: 1
  template:
    metadata:
      labels:
        app: ray-new-site
    spec:
      containers:
      - name: ray-new-site-container
        image: "southamerica-east1-docker.pkg.dev/prod1-svc-lzjf/ray-new-site/FRONTEND_IMAGE"
        imagePullPolicy: Always
        ports:
        - containerPort:  3000
        # Add resource requests and limits (good practice)
        resources:
          requests:
            cpu: "500m"
            memory: "128Mi"
          limits:
            cpu: "1000m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
  name: ray-new-sitesvc
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: ray-new-site
  sessionAffinity: None
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: ray-new-site.rayapp.io-route

spec:
  parentRefs:
  - name: prod-gateway
  hostnames:
  - rayapp.io
  - www.rayapp.io
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: ray-new-sitesvc
      port: 80
